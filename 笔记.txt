1.AngularJS
	MVx――数据、表现分离

	Angular是什么、干什么？
		减轻程序员的负担、避免重复劳动

	原生js中oninput是输入时实时显示出来

	扩展了HTML的功能；颠覆性、可扩展

2.基本使用
	MVC：
	M	Model		模型――数据
	V	View		视图――表现层
	C	Controller	控制器――业务逻辑

	ng-app=""	范围
	ng-model	哪是数据
	ng-bind		往哪显示	不好,模板{{}}比它更灵活

两个词：
	双向绑定――可进可出
				eg:两个标签ng-model同一个变量，一个改变另一个也跟着改变，两个中变哪个另一个都跟着变
				
				错误示范：一个用ng-model另一个用ng-bind就没作用
	依赖注入：
		饭店：你要什么他就给你返什么
		函数――参数由调用方决定	eg:函数.html
		依赖注入――参数由定义方决定

模板
	{{东西}}，这里面可以加表达式

	(12*5)=>60

-------------------------------------------------------------------------------------------------------------------

1.angular和JavaScript不互通  怎样才能打通涅？？？
2.Angular的开发模式和传统开发模式完全不同――只需要盯住数据
	数据是核心

-------------------------------------------------------------------------------------------------------------------

不互通：
1.函数不互通
2.变量也不互通
3.事件也不互通

ng-

-------------------------------------------------------------------------------------------------------------------

互通：Controller

--------------------------------------------------------------------------------------------------------------------------------

Angular接管了UI
	ng-init初始化

--------------------------------------------------------------------------------------------------------------------------------

AngularJS：MVx框架，把数据、表现、逻辑分离开
	方便程序员――避免重复劳动（获取、事件）

ng-model	数据、双向绑定
ng-bind	输出
ng-app		范围

{{}}模板

1.Angular和JavaScript不互通
2.盯住数据

ng-click
ng-init

angular兼容性很差，移动端没问题
angular很重，不可互通；vue很轻，也不可互通
	版本
	1.2.x
	1.3.x  从这版开始改了很多东西

MVx

--------------------------------------------------------------------------------------------------------------------------------
可循环的数据：
	数组，json
Controller――控制器：一个程序里可以有很多controller
1.放JS代码,标签里不能放JS代码
2.桥梁

--------------------------------------------------------------------------------------------------------------------------------
angular的数据都存在$scope上
注：这个$scope不能写成别的，否则会报错
	Error:[$injector:unpr]
		   Unknow provider:$sProvider <-$你错误的名字

1个页面里：
很多个module

1个module里：
很多个Controller

--------------------------------------------------------------------------------------------------------------------------------

1.双向绑定
2.依赖注入
	普通函数：由调用方决定参数
	ng函数：由定义方决定参数


function show(c, b){
	alert(c+b);
}

show(12, 5);

--------------------------------------------------------------------------------------------------------------------------------

filter――过滤器
	

https://www.baidu.com/img/bd_logo1.png

ng-src
ng-href
ng-hide
ng-show

ng-clack	延迟加载

ng-?
控制器-controller
	1.数据






3.angularjs表达式
	{{表达式}}
	是ng自己的一套解析程序，不完全和js一样
	ng和js环境不互通(ng变量都是$scope的一部分)
	数据初始化：ng-init="名字=值；名字=值"

	class和style
	class的两种写法：
		1.直接写：  class="{{xxx}}"
		2.数组：    ng-class="arr"

	style的两种写法
		1.直接写：	style="{{xxx}}"
		2.json:  	ng-style="json"

	判断写法：
		ng-if		删除元素
					<xxx ng-if="条件"><xxx>
					如：i==index、arr2.indexOf(v)!=-1

					三目：{{条件?成功：不成功}}
		ng-show		显示
		ng-hide		隐藏
--------------------------------------------------------------------------------------------------------------------------------

angular入门：
1.ng-app="xxx"
2.ng-controller="xxx"
	var app=angular.module('app_name', []);
	app.controller('contr_name', function ($scope, $http){
	});

3.ng-model

$scope.变量
$scope.函数

ng-repeat="xxx in 数组|json"
ng-show

















