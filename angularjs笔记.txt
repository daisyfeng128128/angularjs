他们都用的secure CRT是？


一、angularjs简介
    angularjs是一个js框架，它可通过<scripe>标签添加到html页面
            通过指令扩展了html,通过表达式绑定数据到html

二、angularjs指令
  angularjs通过被称为指令的新属性来扩展html
  angularjs通过内置指令来为应用添加功能
  angularjs允许你自定义指令
  angularjs指令是扩展的html属性，带有前缀ng-
  ng-app指令初始化一个angularjs应用程序

    ng-app 指令定义了 AngularJS 应用程序的 根元素。
    ng-app 指令在网页加载完毕时会自动引导（自动初始化）应用程序 

    如果移除了 ng-app 指令，HTML 将直接把表达式显示出来，不会去计算表达式的结果。

  ng-init指令初始化应用程序数据
    ng-init 指令为 AngularJS 应用程序定义了 初始值。
    通常情况下，不使用 ng-init。您将使用一个控制器或模块来代替它。  

  ng-model指令把元素值（比如输入域的值）绑定到应用程序
     ng-model 指令 绑定 HTML 元素 到应用程序数据。 


  绑定 HTML 元素到 HTML 表单。

  HTML5 允许扩展的（自制的）属性，以 data- 开头。
  AngularJS 属性以 ng- 开头，但是您可以使用 data-ng- 来让网页对 HTML5 有效。


  ng-repeat 指令对于集合中（数组中）的每个项会 克隆一次 HTML 元素。

  创建自定义的指令
    除了 AngularJS 内置的指令外，我们还可以创建自定义指令。
    你可以使用 .directive 函数来添加自定义的指令。
    要调用自定义指令，HTML 元素上需要添加自定义指令名。
    使用驼峰法来命名一个指令， runoobDirective, 但在使用它时需要以 - 分割, runoob-directive:
        <body ng-app="myApp">
        <runoob-directive></runoob-directive>
        <script>
        var app = angular.module("myApp", []);
        app.directive("runoobDirective", function() {
            return {
                template : "<h1>自定义指令!</h1>"
            };
        });
        </script>
        </body>

        你可以通过以下方式来调用指令：
          元素名
          属性
          类名
          注释

        以下实例方式也能输出同样结果:
            元素名：<runoob-directive></runoob-directive>
              属性：<div runoob-directive></div>
              类名：<div class="runoob-directive"></div>
              注释：<!-- directive: runoob-directive -->

          限制使用：你可以限制你的指令只能通过特定的方式来调用
                    通过添加restrict属性，并设置值为"A",俩设置指令只能通过特定的方式来调用

                var app = angular.module("myApp", []);
                app.directive("runoobDirective", function() {
                    return {
                        restrict : "A",
                        template : "<h1>自定义指令!</h1>"
                    };
                });
          restrict值可以是以下几种：
              E作为元素名使用
              A作为属性使用
              C作为类名使用
              M作为注释使用
            restrict 默认值为 EA, 即可以通过元素名和属性名来调用指令。

三、angularjs表达式
    angularjs使用表达式把数据绑定到html
    an表达式写在双大括号内：{{expression}}
    an表达式把数据绑定到html，这与ng-bind指令有异曲同工之妙
    an表达式将在表达式书写的位置"输出"数据

    an表达式很像js表达式：他们可以包含文字、运算符和变量
        实例 {{ 5 + 5 }} 或 {{ firstName + " " + lastName }}

    an表达式与js表达式
      类似于js表达式，an表达式可以包含字母、操作符、变量
      与js表达式不同，an表达式可以写在html中
      与js表达式不同，an表达式不支持条件判断、循环及异常？？？
      与js表达式不同，支持过滤器？？？

      an应用
        AngularJS 模块（Module） 定义了 AngularJS 应用。
        AngularJS 控制器（Controller） 用于控制 AngularJS 应用。
        ng-app指令定义了应用, ng-controller 定义了控制器。

四、模型
    ng-model 指令用于绑定应用程序数据到 HTML 控制器(input, select, textarea)的值。
    ng-model 指令可以将输入域的值与 AngularJS 创建的变量绑定。
    双向绑定，在修改输入域的值时， AngularJS 属性的值也将修改

    验证用户输入
    应用状态
    CSS 类

    ng-model 指令也可以：
      为应用程序数据提供类型验证（number、email、required）。
      为应用程序数据提供状态（invalid、dirty、touched、error）。？？？
      为 HTML 元素提供 CSS 类
        ng-model 指令基于它们的状态为 HTML 元素提供了 CSS 类

        ng-model 指令根据表单域的状态添加/移除以下类：
          ng-empty
          ng-not-empty
          ng-touched
          ng-untouched
          ng-valid
          ng-invalid
          ng-dirty
          ng-pending
          ng-pristine

五、作用域scope
    scope是应用在html（视图）和js（控制器）之间的纽带
    scope是一个对象，有可用的方法和属性
    scope可应用在视图和控制器上

    Scope 概述
      AngularJS 应用组成如下：
        View(视图), 即 HTML。
        Model(模型), 当前视图中可用的数据。
        Controller(控制器), 即 JavaScript 函数，可以添加或修改属性。
      scope 是模型。
      scope 是一个 JavaScript 对象，带有属性和方法，这些属性和方法可以在视图和控制器中使用。
      如果你修改了视图，模型和控制器也会相应更新

      根作用域
        所有的应用都有一个 $rootScope，它可以作用在 ng-app 指令包含的所有 HTML 元素中。
        $rootScope 可作用于整个应用中。是各个 controller 中 scope 的桥梁。用 rootscope 定义的值，可以在各个 controller 中使用。

        注意 $rootScope 在循环对象内外都可以访问。


六、an控制器
    AngularJS 控制器 控制 AngularJS 应用程序的数据。
    AngularJS 控制器是常规的 JavaScript 对象。

七、an过滤器
    过滤器可以使用一个管道字符（|）添加到表达式和指令中。

    AngularJS 过滤器可用于转换数据：

    过滤器     描述
    currency   格式化数字为货币格式。
    filter     从数组项中选择一个子集。
    lowercase  格式化字符串为小写。
    orderBy    根据某个表达式排列数组。
    uppercase  格式化字符串为大写。

    过滤输入
    输入过滤器可以通过一个管道字符（|）和一个过滤器添加到指令中，该过滤器后跟一个冒号和一个模型名称。
    filter 过滤器从数组中选择一个子集

八、AngularJS 服务(Service)
      AngularJS 中你可以创建自己的服务，或使用内建服务。
      什么是服务？
        在 AngularJS 中，服务是一个函数或对象，可在你的 AngularJS 应用中使用。
        AngularJS 内建了30 多个服务。
        有个 $location 服务，它可以返回当前页面的 URL 地址。 
        注意$location服务是作为一个参数传递到controller中，如果使用它，需要在controller中定义

      为什么使用服务?
        在很多服务中，比如 $location 服务，它可以使用 DOM 中存在的对象，类似 window.location 对象，但 window.location 对象在 AngularJS 应用中有一定的局限性。
        AngularJS 会一直监控应用，处理事件变化， AngularJS 使用 $location 服务比使用 window.location 对象更好。
        $location vs window.location

      $location vs window.location
      window.location
            目的  允许对当前浏览器位置进行读写操作
            API   暴露一个"裸聊"的能被读写的对象
            是否在AngularJS应用生命周期中和应用整合  否
            是否和HTML5 API的无缝整合                否
            和应用的上下文是否相关                   否，window.location.path返回"/docroot/actual/path"

      window.location
            目的  允许对当前浏览器位置进行读写操作

            API   暴露jquery风格的读写器

            是否在AngularJS应用生命周期中和应用整合  可获取到应用声明周期内的每一个阶段，并且和$watch整合

            是否和HTML5 API的无缝整合                
            是（对低级浏览器优雅降级）

            和应用的上下文是否相关                   
            是，$location.path()返回"/actual/path"



    $http 服务
        $http 是 AngularJS 应用中最常用的服务。 服务向服务器发送请求，应用响应服务器传送过来的数据。

    $timeout 服务
        AngularJS $timeout 服务对应了 JS window.setTimeout 函数。

    $interval 服务
        AngularJS $interval 服务对应了 JS window.setInterval 函数。
        js原生：toLocaleTimeString()方法可根据本地时间把Date对象的时间部分转化为字符串，并返回结果

    过滤器中，使用自定义服务
        当你创建了自定义服务，并连接到你的应用上后，你可以在控制器，指令，过滤器或其他服务中使用它。


九、AngularJS Select(选择框)
    使用ng-options创建选择框
    在AngularJS中我们可以使用ng-options指令来创建一个下拉列表，列表项通过对象和数组循环输出
      ng-options VS ng-repeat
      使用ng-repeat指令来创建列表，选中的值是一个字符串
      使用ng-options指令，选择的值是一个对象，当选择值是一个对象时，我们就可以获取更多信息，应用也更灵活

    数据源为对象：使用对象作为数据源，x为键(key),y为值(value)，你选择的值为在key-value对中的value
                  value在key-value对中也可以是个对象

九、AngularJS表格
          在表格中显示数据：ng-repeat指令可完美显示表格
             使用 CSS 样式：为了让页面更加美观，可以在页面中使用CSS
       使用 orderBy 过滤器：排序显示，可以使用 orderBy 过滤器
     使用 uppercase 过滤器: 使用 uppercase 过滤器转换为大写
         显示序号 ($index): 表格显示序号可以在 <td> 中添加 $index

九、AngularJS SQL
    使用 PHP 从 MySQL 中获取数据
    ASP.NET 中执行 SQL 获取数据

    服务端代码
    以下列出了几种服务端代码类型：
    使用 PHP 和 MySQL。返回 JSON。
    使用 PHP 和 MS Access。返回 JSON。
    使用 ASP.NET, VB, 及 MS Access。 返回 JSON。
    使用 ASP.NET, Razor, 及 SQL Lite。 返回 JSON。


十、AngularJS HTML DOM：AngularJS 为 HTML DOM 元素的属性提供了绑定应用数据的指令。
    ng-disabled 指令：ng-disabled 指令直接绑定应用程序数据到 HTML 的 disabled 属性。

    添加指令：directive
    模块和控制器包含在js文件中
      比如：一文件引入了2个js文件，
            "myApp.js" 包含了应用模块的定义程序
            "myCtrl.js" 文件包含了控制器

    在模块定义中 [] 参数用于定义模块的依赖关系。
    中括号[]表示该模块没有依赖，如果有依赖的话会在中括号写上依赖的模块名字。

    函数会影响到全局命名空间
        js中应避免使用全局变量，因为它们很容易被其他脚本文件覆盖
        angularJS模块让所有函数的作用域在该模块下，避免了该问题

    什么时候载入库？
      在实例中，所有的angularJS库都在HTML文档的头部载入
      对应HTML应用程序，通常建议把所有的脚本都放置在body元素的最底部
      这会提高页面加载速度，因为HTML加载不受制于脚本加载

十一、AngularJS 表单：AngularJS 表单是输入控件的集合。
          以下HTML input元素被称为HTML控件：
          input元素、select元素、button元素、textarea元素

          HTML表单：HTML 表单通常与 HTML 控件同时存在
                    novalidate  不对输入进行验证的表单，如果使用该属性，则表单不会验证表单的输入。
                    novalidate 属性在应用中不是必须的，但是你需要在 AngularJS 表单中使用，用于重写标准的 HTML5 验证。
                    HTML 表单属性 novalidate 用于禁用浏览器默认的验证。



                    novalidate属性适用于：<form>、一级以下类型的<input>标签：text,search,url.telephone,email,password,date pickers以及color
                    novalidate属性是h5中的新属性


十二、AngularJS输入验证：客户端的验证不能确保用户输入数据的安全，所以服务端的数据验证也是必须的。

      属性         描述
      $dirty       表单有填写记录
      $valid       字段内容合法的
      $invalid     字段内容是非法的
      $pristine    表单没有填写记录

十三、AngularJS  API
      通用的API函数
      API                       描述
      angular.lowercase()       转换字符串为小写
      angular.uppercase()       转换字符串为大写
      angular.isString()        判断给定的对象是否为字符串，如果是返回 true。
      angular.isNumber()        判断给定的对象是否为数字，如果是返回 true。

十四、AngularJS 包含：在AngularJS中，可以在html中包含html文件

      在html中包含html文件：在html中，目前还不支持包含html文件的功能

      服务器包含：大多服务器脚本都支持包含文件功能(SSI：Server Side Includes)
                  使用SSI，可在html中包含html文件，并发送到客户端浏览器
                  <?php require("navigation.php"); ?>

      客户端包括：通过 JavaScript 有很多种方式可以在 HTML 中包含 HTML 文件。
                  通常我们使用 http 请求 (AJAX) 从服务端获取数据，返回的数据我们可以通过 使用 innerHTML 写入到 HTML 元素中。

      AngularJS 包含：使用 AngularJS, 你可以使用 ng-include 指令来包含 HTML 内容
                      <body ng-app="">
                        <div ng-inclued="'...'"></div>
                      </body>

      包含 AngularJS 代码：ng-include 指令除了可以包含 HTML 文件外，还可以包含 AngularJS 代码

      跨域包含：默认情况下， ng-include 指令不允许包含其他域名的文件。
                如果你需要包含其他域名的文件，你需要设置域名访问白名单

                <body ng-app="myApp">
                  <div ng-include="'http://c.runoob.com/runoobtest/angular_include.php'"></div>
                  <script>
                  var app = angular.module('myApp', [])
                  app.config(function($sceDelegateProvider) {
                      $sceDelegateProvider.resourceUrlWhitelist([
                          'http://c.runoob.com/runoobtest/**'
                      ]);
                  });
                  </script>
                </body>

                angular_include.php 文件代码：

                <?php
                  // 允许所有域名可以访问
                  header('Access-Control-Allow-Origin:*');
                   
                  echo '<b style="color:red">我是跨域的内容</b>';
                ?>

十五：AngularJS 动画
      AngularJS 提供了动画效果，可以配合 CSS 使用。
      AngularJS 使用动画需要引入 angular-animate.min.js 库。

      还需在应用中使用模型 ngAnimate：<body ng-app="ngAnimate">

      什么是动画：动画是通过html元素产生的动态变化效果
      应用中动画不宜太多，但合适的使用动画可以增加页面的丰富性，也可以更易让用户理解。

      如果我们应用已经设置了应用名，可以把 ngAnimate 直接添加在模型中：

      ngAnimate做了什么
      ngAnimate模型可以添加或移除class
      ngAnimate模型不能使html元素产生动画，但是ngAnimate会检测事件，类似隐藏显示html元素，如果事件发生ngAnimate就会使用预定义class来设置html动画

      AngularJS添加/移除class的指令：
      ng-show
      ng-hide
      ng-class
      ng-view
      ng-include
      ng-repeat
      ng-if
      ng-switch

      ng-show和ng-hide指令用于添加或移除ng-hide class的值
      其他指令会在进入dom会添加ng-enter类，移除dom会添加ng-leave属性

      当html元素位置改变时,ng-repeat指令同样可以添加ng-move类

      此外，在动画完成后，html元素的类集合将会被移除。例如：ng-hide指令会添加以下类：

      ng-animate
      ng-hide-animate
      ng-hide-add (如果元素将被隐藏)
      ng-hide-remove (如果元素将显示)
      ng-hide-add-active (如果元素将隐藏)
      ng-hide-remove-active (如果元素将显示)

                      






















  



      

        




      















angularjs简介
    核心思想：
        依赖注入
        模块化
        双向绑定
        语义化标签
    优点：

    开发和调试工具的使用

    引入angular.js文件，使用ng-app指令声明angularJS管理边界
        ng-app="" 里面要求写一个变量名，也可不输入
    angularJS双向绑定简单使用
        双大括号{{}}
    常用指令的演示：
        ng-model,ng-bind

   1、 angularJS前端MVC的设计与搭建
        model-模型，        对应数据库
        view-视图            对应html页面
        controller-控制器    对应用户交互的部分   
        ps:前端比较出名的mvc框架是estjs

  2、  Binding指令实现双向数据绑定
          ng-bind的使用
          {{}}插值表达式的使用

          当页面加载较多时，页面加载出来的就是{{}}很不美观，解决方法：（1）ng-bind
          (2) ng-clock
                <h1>{{uname}}</h1>
                <h1 ng-bind="uname"></h1>
                <h1 ng-clock class="ng-clock">{{uname}}</h1>
                    原理：当angular扫描ng-clock时，先不渲染{{}},等全加载完之后，把class移除掉，h1标签显示出来
                
   3、 Contrllers的使用
   4、 在$scope中变量和方法的使用
        在$scope上定义方法并在页面上进行绑定调用
        在$scope上定义变量并在方法中进行使用

        ***slice splice split

        1）slice(数组)
          用法：arr.slice(start,end)
          解释：该方法是对数组进行部分截取，并返回一个数组副本，参数start是截取的开始数组索引，end参数等于要取的最后一个字符的位置加上1(可选)

          var a=[1,2,3,4,5,6];
          var b=a.slice(0,3);     //[1,2,3]
          var c=a.slice(3)        //[4,5,6]

          //如果两个参数中的任何一个是负数，arr.length会和他们相加，试图让他们成为非负数
          //当只传入一个参数，且是负数时,length会与参数相加，然后再截取
            var a=[1,2,3,4,5,6];
            var b=a.slice(-1);  //[6]

          //当只传入一个参数，是负数时,并且参数的绝对值大于或等于数组length时，会截取整个数组
            var a=[1,2,3,4,5,6];
            var b=a.slice(-6);  //[1,2,3,4,5,6]
            var c=a.slice(-8);  //[1,2,3,4,5,6]

          //当传入两个参数一正一负时，length也会先于负数相加后，再截取
            var a=[1,2,3,4,5,6];
            var b=a.slice(2,-3);  //[3]

          //当传入一个参数，大于或等于length时，将返回一个空数组
            var a=[1,2,3,4,5,6];
            var b=a.slice(6);　　//[]

        2）slice（字符串）
          用法：string.slice(start,end)
          解释：slice方法复制string的一部分来构造一个新的字符串，用法与参数匀和数组的slice方法一样;end参数等于你要取的最后一个字符的位置值加上
            var a="i am a boy";
            var b=a.slice(0,6);  //"i am a"

      3).splice（数组）
        用法：array.splice(start,deleteCount,item...)
        解释：splice方法从array中移除一个或多个数组，并用新的item替换它们。参数start是从数组array中移除元素的开始位置。参数deleteCount是要移除的元素的个数。
        如果有额外的参数，那么item会插入到被移除元素的位置上。它返回一个包含被移除元素的数组。

        var a=['a','b','c'];
        var b=a.splice(1,1,'e','f');  //a=['a','e','f','c'],b=['b']

      4.split（字符串）
        用法：string.split(separator,limit)
        解释：split方法把这个string分割成片段来创建一个字符串数组。可选参数limit可以限制被分割的片段数量。separator参数可以是一个字符串或一个正则表达式。如果
        separator是一个空字符，会返回一个单字符的数组。

        var a="0123456";
        var b=a.split("",3);  //b=["0","1","2"]



angularJS-services与指令的使用
  自定义services服务
    angularjs里services表现形式
      value contant factory service provider(最高级)
      value contant   做小的配置文件时使用，
      value           值是可以改变的，
      constant（常量）值是不可以改变的
      （在开发中，访问地址是不可变的，$http.post()直接地址传入即可）
    在controller中使用services
      factory         开发中用的最多的
                      用法：.factory("变量"，function(){

                            })
    
  services的应用：例子见service的应用.html
  常用指令的使用
                  指令ng-bind,ng-model,ng-show/ng-hide,ng-if,ng-submit,ng-disabled的使用

                  ng-show/ng-hide,ng-if 
                  3个指令实现效果一样，if会把dom元素移除掉，show和hide不会

                  指令ng-checked,ng-src,ng-href,ng-class,ng-selected,ng-change的使用
                  ng-src="{{}}"这个双大括号不能省，必须带着
                  ng-class="{}"

                  **表单里required是必填项
                  $invaild内置的表单验证方法


  常用指令ng-repeat的使用
    特有属性($index,$first,$last)的使用

  angularjs内置服务$http的使用
    使用$http查询MYSQLshuju
    $http实现对数据的增删改



用angular创建web程序，应是个单页面的应用程序
